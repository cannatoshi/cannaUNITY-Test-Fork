# Generated by Django 5.2 on 2025-04-19 16:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('members', '0005_remove_member_beitragsmodell_and_more'),
        ('rooms', '0002_remove_room_created_by'),
        ('trackandtrace', '0011_labtesting'),
    ]

    operations = [
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('is_destroyed', models.BooleanField(default=False)),
                ('destruction_reason', models.CharField(blank=True, max_length=255)),
                ('destruction_date', models.DateTimeField(blank=True, null=True)),
                ('transfer_status', models.CharField(choices=[('not_transferred', 'Nicht übergeführt'), ('partially_transferred', 'Teilweise übergeführt'), ('fully_transferred', 'Vollständig übergeführt')], default='not_transferred', help_text='Überführungsstatus: nicht, teilweise oder vollständig übergeführt', max_length=30)),
                ('is_transferred', models.BooleanField(default=False)),
                ('transfer_date', models.DateTimeField(blank=True, null=True)),
                ('last_transfer_date', models.DateTimeField(blank=True, help_text='Datum der letzten Überführung', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatur während des Arbeitsschritts in °C', max_digits=5, null=True)),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, help_text='Luftfeuchtigkeit während des Arbeitsschritts in %', max_digits=5, null=True)),
                ('batch_number', models.CharField(help_text='Automatisch generierte Chargennummer (PACK_YYYYMMDD_NNN)', max_length=50, unique=True)),
                ('packaging_date', models.DateField(help_text='Datum der Verpackung')),
                ('genetic_name', models.CharField(help_text='Genetische Bezeichnung (übernommen von Laborkontrolle)', max_length=255)),
                ('input_weight', models.DecimalField(decimal_places=2, help_text='Eingangsgewicht in Gramm', max_digits=8)),
                ('remaining_weight', models.DecimalField(decimal_places=2, help_text='Verbleibendes Gewicht in Gramm', max_digits=8)),
                ('packaging_type', models.CharField(choices=[('bulk', 'Bulk/Großverpackung'), ('single', 'Einzelverpackung'), ('mixed', 'Mischverpackung')], default='single', help_text='Art der Verpackung', max_length=20)),
                ('product_type', models.CharField(choices=[('flower', 'Blüte'), ('extract', 'Extrakt'), ('oil', 'Öl'), ('edible', 'Essbar'), ('other', 'Sonstiges')], default='flower', help_text='Art des Produkts', max_length=20)),
                ('package_count', models.IntegerField(default=1, help_text='Anzahl der erstellten Pakete')),
                ('unit_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Gewicht pro Einheit in Gramm', max_digits=8, null=True)),
                ('packaging_material', models.CharField(blank=True, help_text='Verwendetes Verpackungsmaterial', max_length=255)),
                ('is_quality_checked', models.BooleanField(default=False, help_text='Qualitätskontrolle durchgeführt')),
                ('quality_check_date', models.DateField(blank=True, help_text='Datum der Qualitätskontrolle', null=True)),
                ('quality_check_notes', models.TextField(blank=True, help_text='Anmerkungen zur Qualitätskontrolle')),
                ('has_labels', models.BooleanField(default=False, help_text='Produkt ist etikettiert')),
                ('label_details', models.TextField(blank=True, help_text='Details zu den Etiketten')),
                ('shelf_life', models.IntegerField(blank=True, help_text='Haltbarkeit in Tagen', null=True)),
                ('storage_conditions', models.CharField(blank=True, help_text='Empfohlene Lagerbedingungen', max_length=255)),
                ('expiry_date', models.DateField(blank=True, help_text='Ablaufdatum', null=True)),
                ('label_image', models.ImageField(blank=True, help_text='Bild des Etiketts', null=True, upload_to='packaging_labels/')),
                ('destroying_member', models.ForeignKey(blank=True, help_text='Mitglied, das die Vernichtung durchgeführt hat', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_destructions', to='members.member')),
                ('lab_testing_source', models.ForeignKey(help_text='Ursprung der Verpackung (Laborkontrolle)', on_delete=django.db.models.deletion.PROTECT, related_name='packagings', to='trackandtrace.labtesting')),
                ('responsible_member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_responsibilities', to='members.member')),
                ('room', models.ForeignKey(blank=True, help_text='Raum, in dem dieser Prozessschritt stattfindet', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='rooms.room')),
                ('transferring_member', models.ForeignKey(blank=True, help_text='Mitglied, das die Überführung durchgeführt hat', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_transfers', to='members.member')),
            ],
            options={
                'verbose_name': 'Verpackung',
                'verbose_name_plural': 'Verpackungen',
                'ordering': ['-packaging_date', 'genetic_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductDistribution',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('is_destroyed', models.BooleanField(default=False)),
                ('destruction_reason', models.CharField(blank=True, max_length=255)),
                ('destruction_date', models.DateTimeField(blank=True, null=True)),
                ('transfer_status', models.CharField(choices=[('not_transferred', 'Nicht übergeführt'), ('partially_transferred', 'Teilweise übergeführt'), ('fully_transferred', 'Vollständig übergeführt')], default='not_transferred', help_text='Überführungsstatus: nicht, teilweise oder vollständig übergeführt', max_length=30)),
                ('is_transferred', models.BooleanField(default=False)),
                ('transfer_date', models.DateTimeField(blank=True, null=True)),
                ('last_transfer_date', models.DateTimeField(blank=True, help_text='Datum der letzten Überführung', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatur während des Arbeitsschritts in °C', max_digits=5, null=True)),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, help_text='Luftfeuchtigkeit während des Arbeitsschritts in %', max_digits=5, null=True)),
                ('batch_number', models.CharField(help_text='Automatisch generierte Chargennummer (DIST_YYYYMMDD_NNN)', max_length=50, unique=True)),
                ('distribution_date', models.DateField(help_text='Datum der Ausgabe')),
                ('genetic_name', models.CharField(help_text='Genetische Bezeichnung (übernommen von Verpackung)', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Menge des ausgegebenen Produkts in Gramm', max_digits=8)),
                ('remaining_quantity', models.DecimalField(decimal_places=2, help_text='Verbleibende Menge in Gramm (relevant für Rückgaben)', max_digits=8)),
                ('package_count', models.IntegerField(default=1, help_text='Anzahl der ausgegebenen Pakete')),
                ('distribution_type', models.CharField(choices=[('member', 'Mitgliedsausgabe'), ('return', 'Rückgabe'), ('donation', 'Spende'), ('disposal', 'Entsorgung'), ('other', 'Sonstiges')], default='member', help_text='Art der Ausgabe', max_length=20)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, help_text='Preis pro Einheit', max_digits=10, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, help_text='Gesamtpreis', max_digits=10, null=True)),
                ('is_paid', models.BooleanField(default=False, help_text='Zahlung erhalten')),
                ('payment_method', models.CharField(blank=True, help_text='Zahlungsmethode', max_length=100)),
                ('payment_date', models.DateField(blank=True, help_text='Zahlungsdatum', null=True)),
                ('status', models.CharField(choices=[('pending', 'Ausstehend'), ('completed', 'Abgeschlossen'), ('canceled', 'Storniert'), ('returned', 'Zurückgegeben')], default='pending', help_text='Status der Ausgabe', max_length=20)),
                ('is_confirmed', models.BooleanField(default=False, help_text='Empfang wurde bestätigt')),
                ('confirmation_date', models.DateField(blank=True, help_text='Datum der Empfangsbestätigung', null=True)),
                ('recipient_signature', models.FileField(blank=True, help_text='Unterschrift des Empfängers', null=True, upload_to='signatures/')),
                ('tracking_number', models.CharField(blank=True, help_text='Tracking-Nummer oder Referenz', max_length=100)),
                ('distribution_document', models.FileField(blank=True, help_text='Ausgabedokument oder Beleg', null=True, upload_to='distribution_docs/')),
                ('destroying_member', models.ForeignKey(blank=True, help_text='Mitglied, das die Vernichtung durchgeführt hat', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_destructions', to='members.member')),
                ('packaging_source', models.ForeignKey(help_text='Ursprung der Produktausgabe (Verpackung)', on_delete=django.db.models.deletion.PROTECT, related_name='distributions', to='trackandtrace.packaging')),
                ('receiving_member', models.ForeignKey(help_text='Mitglied, das das Produkt erhält', on_delete=django.db.models.deletion.PROTECT, related_name='received_products', to='members.member')),
                ('responsible_member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_responsibilities', to='members.member')),
                ('room', models.ForeignKey(blank=True, help_text='Raum, in dem dieser Prozessschritt stattfindet', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='rooms.room')),
                ('transferring_member', models.ForeignKey(blank=True, help_text='Mitglied, das die Überführung durchgeführt hat', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_transfers', to='members.member')),
            ],
            options={
                'verbose_name': 'Produktausgabe',
                'verbose_name_plural': 'Produktausgaben',
                'ordering': ['-distribution_date', 'genetic_name'],
            },
        ),
    ]
