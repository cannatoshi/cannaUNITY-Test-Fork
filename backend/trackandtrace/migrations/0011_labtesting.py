# Generated by Django 5.2 on 2025-04-19 16:00

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('members', '0005_remove_member_beitragsmodell_and_more'),
        ('rooms', '0002_remove_room_created_by'),
        ('trackandtrace', '0010_processing'),
    ]

    operations = [
        migrations.CreateModel(
            name='LabTesting',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('is_destroyed', models.BooleanField(default=False)),
                ('destruction_reason', models.CharField(blank=True, max_length=255)),
                ('destruction_date', models.DateTimeField(blank=True, null=True)),
                ('transfer_status', models.CharField(choices=[('not_transferred', 'Nicht übergeführt'), ('partially_transferred', 'Teilweise übergeführt'), ('fully_transferred', 'Vollständig übergeführt')], default='not_transferred', help_text='Überführungsstatus: nicht, teilweise oder vollständig übergeführt', max_length=30)),
                ('is_transferred', models.BooleanField(default=False)),
                ('transfer_date', models.DateTimeField(blank=True, null=True)),
                ('last_transfer_date', models.DateTimeField(blank=True, help_text='Datum der letzten Überführung', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatur während des Arbeitsschritts in °C', max_digits=5, null=True)),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, help_text='Luftfeuchtigkeit während des Arbeitsschritts in %', max_digits=5, null=True)),
                ('batch_number', models.CharField(help_text='Automatisch generierte Chargennummer (LAB_YYYYMMDD_NNN)', max_length=50, unique=True)),
                ('sample_date', models.DateField(help_text='Datum der Probennahme')),
                ('test_date', models.DateField(help_text='Datum der Durchführung des Tests')),
                ('genetic_name', models.CharField(help_text='Genetische Bezeichnung (übernommen von Verarbeitung)', max_length=255)),
                ('test_status', models.CharField(choices=[('pending', 'Ausstehend'), ('in_progress', 'In Bearbeitung'), ('completed', 'Abgeschlossen'), ('failed', 'Nicht bestanden')], default='pending', help_text='Status der Laborkontrolle', max_length=20)),
                ('sample_weight', models.DecimalField(decimal_places=2, help_text='Gewicht der Probe in Gramm', max_digits=8)),
                ('remaining_weight', models.DecimalField(decimal_places=2, help_text='Verbleibendes Gewicht in Gramm nach der Laborkontrolle', max_digits=8)),
                ('thc_content', models.DecimalField(blank=True, decimal_places=2, help_text='THC-Gehalt in %', max_digits=5, null=True)),
                ('cbd_content', models.DecimalField(blank=True, decimal_places=2, help_text='CBD-Gehalt in %', max_digits=5, null=True)),
                ('moisture_content', models.DecimalField(blank=True, decimal_places=2, help_text='Feuchtigkeitsgehalt in %', max_digits=5, null=True)),
                ('contaminants_check', models.BooleanField(default=False, help_text='Prüfung auf Verunreinigungen (bestanden=True)')),
                ('pesticides_check', models.BooleanField(default=False, help_text='Prüfung auf Pestizide (bestanden=True)')),
                ('microbes_check', models.BooleanField(default=False, help_text='Mikrobiologische Prüfung (bestanden=True)')),
                ('heavy_metals_check', models.BooleanField(default=False, help_text='Prüfung auf Schwermetalle (bestanden=True)')),
                ('lab_name', models.CharField(blank=True, help_text='Name des Labors, das die Analyse durchgeführt hat', max_length=255)),
                ('test_method', models.CharField(blank=True, help_text='Verwendete Prüfmethode', max_length=255)),
                ('notes_from_lab', models.TextField(blank=True, help_text='Notizen und Anmerkungen vom Labor')),
                ('lab_report', models.FileField(blank=True, help_text='Hochgeladener Laborbericht (PDF)', null=True, upload_to='lab_reports/')),
                ('is_approved', models.BooleanField(default=False, help_text='Freigabe des Produkts nach Laborprüfung')),
                ('approval_date', models.DateField(blank=True, help_text='Datum der Produktfreigabe', null=True)),
                ('destroying_member', models.ForeignKey(blank=True, help_text='Mitglied, das die Vernichtung durchgeführt hat', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_destructions', to='members.member')),
                ('processing_source', models.ForeignKey(help_text='Ursprung der Laborkontrolle (Verarbeitung)', on_delete=django.db.models.deletion.PROTECT, related_name='lab_testings', to='trackandtrace.processing')),
                ('responsible_member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_responsibilities', to='members.member')),
                ('room', models.ForeignKey(blank=True, help_text='Raum, in dem dieser Prozessschritt stattfindet', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='rooms.room')),
                ('transferring_member', models.ForeignKey(blank=True, help_text='Mitglied, das die Überführung durchgeführt hat', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_transfers', to='members.member')),
            ],
            options={
                'verbose_name': 'Laborkontrolle',
                'verbose_name_plural': 'Laborkontrollen',
                'ordering': ['-test_date', 'genetic_name'],
            },
        ),
    ]
